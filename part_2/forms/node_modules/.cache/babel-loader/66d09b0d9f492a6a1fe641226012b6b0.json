{"ast":null,"code":"var _jsxFileName = \"/Users/necmettinsargin/Documents/GitHub/fullstackopen/part_2/forms/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error happened...');\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote));\n    }).catch(error => {\n      alert(`the note '${note.content}' was already deleted from server`);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"show \", showAll ? \"important\" : \"all\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/necmettinsargin/Documents/GitHub/fullstackopen/part_2/forms/src/App.js"],"names":["React","useState","useEffect","axios","Note","Notification","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","toggleImportanceOf","id","note","find","n","changedNote","important","update","returnedNote","map","catch","error","alert","content","filter","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","create","concat","handleNoteChange","console","log","target","value","notesToShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}