{"ast":null,"code":"var _jsxFileName = \"/Users/necmettinsargin/Documents/GitHub/fullstackopen/part_2/forms/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  useEffect(noteService.getAll().then(response => {\n    setNotes(response.data);\n  }), []);\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id == id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(id, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  console.log('render', notes.length, 'notes');\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    };\n    noteService.create(noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"show \", showAll ? \"important\" : \"all\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, notesToShow.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/necmettinsargin/Documents/GitHub/fullstackopen/part_2/forms/src/App.js"],"names":["React","useState","useEffect","axios","Note","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","getAll","then","response","data","toggleImportanceOf","id","note","find","n","changedNote","important","update","map","console","log","length","notesToShow","filter","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","Math","random","create","concat","handleNoteChange","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect((\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response.data)\n      })\n  ), [])\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id == id);\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => note.id !== id ? note : response.data))\n\n      })\n  }\n\n  console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n\n      })\n  }\n  \n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value)\n  }\n  return (\n    <div>\n      <h1 style={{ color: \"red\" }}>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}